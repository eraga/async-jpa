buildscript {
    ext {
        kotlinVersion = '1.2.41'
        rxjavaVersion = '2.1.13'
        jpa2apiVersion = '1.0.0.Final'

        spekVersion = "1.1.5"
        junitPlatformVersion = "1.0.0"
        hibernateVersion = '5.2.12.Final'
    }


    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"
        classpath 'net.researchgate:gradle-release:2.4.0'
    }

    Properties props = new Properties()
    props.load(new FileInputStream("$project.rootDir/gradle-version.properties"))
    props.each { prop ->
        project.ext.set(prop.key, prop.value)
    }

}

group 'net.eraga.rxjpa2'
version ext.version

apply plugin: 'kotlin'
apply plugin: "org.junit.platform.gradle.plugin"
apply plugin: 'net.researchgate.release'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/releases'
    }
}

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    compile "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'



    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

    testImplementation "org.jetbrains.spek:spek-api:$spekVersion"
    testImplementation "org.jetbrains.spek:spek-subject-extension:$spekVersion"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"

    testImplementation "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"

//    testImplementation "org.hibernate:hibernate-entitymanager:$hibernateVersion"

    testImplementation group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.6.5'


    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.197'

    // NOSQL
    testImplementation group: 'com.impetus.kundera.client', name: 'kundera-neo4j', version: '3.12'
    testImplementation group: 'com.impetus.kundera.client', name: 'kundera-rdbms', version: '3.12'

    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

configurations {
    archives {
        extendsFrom configurations.default
    }
}

signing {
    required { hasProperty("release") && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}



uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        if(!project.hasProperty('nexusUsername') || !project.hasProperty('nexusPassword'))
            return

        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: "http://nexus.eraga.net/content/repositories/public-releases/") {
            authentication(userName: nexusUsername, password: nexusPassword)
        }

        pom.project {
            //noinspection GroovyAssignabilityCheck
            name 'JPA2 RxJava2 helpers'
            packaging 'jar'
            description 'RxJava2 wrappers for blocking JPA2 operations using Kotlin extension functions'
            url 'https://github.com/eraga/rxjpa2'

            scm {
                url 'scm:git@github.com:eraga/rxjpa2.git'
                connection 'scm:git@github.com:eraga/rxjpa2.git'
                developerConnection 'scm:git@github.com:eraga/rxjpa2.git'
            }

            licenses {
                license {
                    //noinspection GroovyAssignabilityCheck
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    //noinspection GroovyAssignabilityCheck
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'tntclaus'
                    //noinspection GroovyAssignabilityCheck
                    name 'Klaus Schwartz'
                    email 'tntclaus@gmail.com'
                }
            }
        }
    }
}


release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '$name-$version'
    versionPropertyFile = 'gradle-version.properties'
    versionProperties = []
    buildTasks = ['build']

    //noinspection UnnecessaryQualifiedReference
    scmAdapters = [
            net.researchgate.release.GitAdapter
    ]

    git {
        requireBranch = 'release'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
//        signTag = false
    }


}

afterReleaseBuild.dependsOn uploadArchives
